
# services:
#   mongodb:
#     image: mongo:latest
#     container_name: mongodb-container
#     ports:
#       - "27017:27017"
#     networks:
#       - app-network
#     volumes:
#       - volumen_tp:/data/db
   


#   backend:
#       build:
#         context: ./go
#         dockerfile: DockerfileBack
#       container_name: backend-container
#       depends_on:
#         - mongodb
#       ports:
#         - "8080:8080"
#       volumes:
#         - /app/html  # Incluye las plantillas HTML
#         - /app/css   # Incluye los archivos CSS
#         - /app/js    # Incluye los archivos JS
#       environment:
#         - GIN_MODE=debug

#       networks:
#         - app-network
      
#   web-app:
#     build:
#       context: ./web 
#       dockerfile: DockerfileFront
#     container_name: web-app-container
#     ports:
#       - "80:80"
#     networks:
#       - app-network
#     depends_on:
#       - backend        

# networks:
#   app-network:
#     driver: bridge

# volumes:
#   volumen_tp:
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongodb-data:/data/db

  go-app:
    build:
      context: ./go
      dockerfile: DockerfileBack
    container_name: go-app-container
    depends_on:
      - mongodb
    ports:
      - "8080:8080"
    networks:
      - app-network

  web-app:
    build:
      context: ./web
      dockerfile: DockerfileFront
    container_name: web-app-container
    ports:
      - "8081:80"
    networks:
      - app-network
    depends_on:
      - go-app

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
